import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import AttractionCard from "@/components/common/AttractionCard";
import LoadingSpinner from "@/components/common/LoadingSpinner";
import templeImage from "@/shared/assets/temple-culture.jpg";
import mountainImage from "@/shared/assets/mountain-nature.jpg";
import floatingMarketImage from "@/shared/assets/floating-market.jpg";
import heroBeachImage from "@/shared/assets/hero-beach.jpg";
import { useLanguage } from "@/shared/contexts/LanguageProvider";

interface Attraction {
  id: string;
  name: string;
  nameLocal: string;
  province: string;
  category: string;
  rating: number;
  reviewCount: number;
  image: string;
  description: string;
  tags: string[];
}

interface CategoryViewProps {
  category: string;
}

const CategoryView = ({ category }: CategoryViewProps) => {
  const navigate = useNavigate();
  const { language } = useLanguage();
  const [attractions, setAttractions] = useState<Attraction[]>([]);
  const [loading, setLoading] = useState(true);
  const [favorites, setFavorites] = useState<string[]>([]);

  // Mock attraction data - in real app this would come from API
  const allAttractions = [
    {
      id: "1",
      name: "Phi Phi Islands",
      nameLocal: "‡∏´‡∏°‡∏π‡πà‡πÄ‡∏Å‡∏≤‡∏∞‡∏û‡∏µ‡∏û‡∏µ",
      province: language === "th" ? "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà" : "Krabi",
      category: "Beach",
      rating: 4.8,
      reviewCount: 2547,
      image: heroBeachImage,
      description:
        language === "th"
          ? "‡∏ô‡πâ‡∏≥‡∏ó‡∏∞‡πÄ‡∏•‡πÉ‡∏™‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏≤‡∏´‡∏¥‡∏ô‡∏õ‡∏π‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö‡∏ä‡∏≤‡∏¢‡∏´‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡∏ô‡πâ‡∏≥‡∏î‡∏π‡∏õ‡∏∞‡∏Å‡∏≤‡∏£‡∏±‡∏á"
          : "Crystal clear waters and stunning limestone cliffs make this a paradise for beach lovers and snorkeling enthusiasts.",
      tags: ["Beach", "Snorkeling", "Island", "Photography"],
    },
    {
      id: "5",
      name: "Phuket Beach",
      nameLocal: "‡∏´‡∏≤‡∏î‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï",
      province: language === "th" ? "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï" : "Phuket",
      category: "Beach",
      rating: 4.6,
      reviewCount: 3421,
      image: heroBeachImage,
      description:
        language === "th"
          ? "‡∏´‡∏≤‡∏î‡∏ó‡∏£‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏ô‡πâ‡∏≥‡∏ó‡∏∞‡πÄ‡∏•‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡πÉ‡∏™ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏≤‡∏á‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢"
          : "White sandy beaches and crystal blue waters with plenty of water activities.",
      tags: ["Beach", "Water Sports", "Sunset", "Resort"],
    },
    {
      id: "2",
      name: "Wat Phra Kaew",
      nameLocal: "‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß",
      province: language === "th" ? "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø" : "Bangkok",
      category: "Culture",
      rating: 4.9,
      reviewCount: 5243,
      image: templeImage,
      description:
        language === "th"
          ? "‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß‡∏°‡∏£‡∏Å‡∏ï"
          : "The most sacred Buddhist temple in Thailand, home to the revered Emerald Buddha statue.",
      tags: ["Temple", "Culture", "Buddhism", "History"],
    },
    {
      id: "6",
      name: "Wat Arun",
      nameLocal: "‡∏ß‡∏±‡∏î‡∏≠‡∏£‡∏∏‡∏ì",
      province: language === "th" ? "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø" : "Bangkok",
      category: "Culture",
      rating: 4.7,
      reviewCount: 2876,
      image: templeImage,
      description:
        language === "th"
          ? "‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏à‡∏î‡∏µ‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏ò‡∏≤‡∏ô‡∏™‡∏π‡∏á‡∏ï‡∏£‡∏∞‡∏´‡∏á‡πà‡∏≤‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£"
          : "Temple with a towering central spire, an iconic symbol of Bangkok.",
      tags: ["Temple", "Architecture", "River View", "Sunset"],
    },
    {
      id: "3",
      name: "Doi Inthanon",
      nameLocal: "‡∏î‡∏≠‡∏¢‡∏≠‡∏¥‡∏ô‡∏ó‡∏ô‡∏ô‡∏ó‡πå",
      province: language === "th" ? "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà" : "Chiang Mai",
      category: "Nature",
      rating: 4.7,
      reviewCount: 1876,
      image: mountainImage,
      description:
        language === "th"
          ? "‡∏¢‡∏≠‡∏î‡πÄ‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡∏ä‡∏°‡∏ß‡∏¥‡∏ß‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏á‡∏î‡∏á‡∏≤‡∏° ‡∏ô‡πâ‡∏≥‡∏ï‡∏Å ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÄ‡∏¢‡πá‡∏ô‡∏™‡∏ö‡∏≤‡∏¢"
          : "The highest peak in Thailand offering breathtaking mountain views, waterfalls, and cool weather.",
      tags: ["Mountain", "Nature", "Hiking", "Waterfalls"],
    },
    {
      id: "7",
      name: "Khao Yai National Park",
      nameLocal: "‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡∏≤‡πÉ‡∏´‡∏ç‡πà",
      province: language === "th" ? "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤" : "Nakhon Ratchasima",
      category: "Nature",
      rating: 4.5,
      reviewCount: 2156,
      image: mountainImage,
      description:
        language === "th"
          ? "‡∏≠‡∏∏‡∏ó‡∏¢‡∏≤‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ô‡πâ‡∏≥‡∏ï‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°"
          : "National park with diverse wildlife and nature, featuring beautiful waterfalls.",
      tags: ["Wildlife", "Hiking", "Waterfalls", "Camping"],
    },
    {
      id: "4",
      name: "Floating Market",
      nameLocal: "‡∏ï‡∏•‡∏≤‡∏î‡∏ô‡πâ‡∏≥",
      province: language === "th" ? "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø" : "Bangkok",
      category: "Food",
      rating: 4.5,
      reviewCount: 3156,
      image: floatingMarketImage,
      description:
        language === "th"
          ? "‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÑ‡∏ó‡∏¢‡πÅ‡∏ö‡∏ö‡∏î‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏¥‡∏° ‡∏Ç‡∏ì‡∏∞‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏™‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏∑‡∏≠"
          : "Experience traditional Thai culture while shopping for fresh fruits and local delicacies from boats.",
      tags: ["Food", "Culture", "Traditional", "Market"],
    },
    {
      id: "8",
      name: "Street Food Market",
      nameLocal: "‡∏ï‡∏•‡∏≤‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏á‡∏ñ‡∏ô‡∏ô",
      province: language === "th" ? "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø" : "Bangkok",
      category: "Food",
      rating: 4.3,
      reviewCount: 4287,
      image: floatingMarketImage,
      description:
        language === "th"
          ? "‡∏•‡∏¥‡πâ‡∏°‡∏£‡∏™‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡πÅ‡∏ó‡πâ‡πÜ ‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡πâ‡∏≤‡∏á‡∏ñ‡∏ô‡∏ô ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡πâ‡∏ô"
          : "Taste authentic Thai food from street vendors with affordable prices and intense flavors.",
      tags: ["Street Food", "Local Cuisine", "Night Market", "Budget"],
    },
  ];

  // Get category emoji and Thai/English names
  const getCategoryInfo = (category: string) => {
    const categoryMap: Record<
      string,
      { emoji: string; th: string; en: string }
    > = {
      Beach: { emoji: "üèñÔ∏è", th: "‡∏ä‡∏≤‡∏¢‡∏´‡∏≤‡∏î", en: "Beach" },
      Culture: { emoji: "üõï", th: "‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°", en: "Culture" },
      Nature: { emoji: "‚õ∞Ô∏è", th: "‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥", en: "Nature" },
      Food: { emoji: "üçú", th: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£", en: "Food" },
    };
    return categoryMap[category] || { emoji: "üìç", th: category, en: category };
  };

  useEffect(() => {
    // Simulate API call
    setLoading(true);

    setTimeout(() => {
      if (category) {
        // Decode URL parameters (handle Thai characters)
        const decodedCategory = decodeURIComponent(category);

        // Filter attractions by category (support both Thai and English names)
        const filtered = allAttractions.filter((attraction) => {
          const categoryInfo = getCategoryInfo(attraction.category);
          return (
            attraction.category.toLowerCase() ===
              decodedCategory.toLowerCase() ||
            categoryInfo.th === decodedCategory ||
            categoryInfo.en.toLowerCase() === decodedCategory.toLowerCase()
          );
        });

        setAttractions(filtered);
      }
      setLoading(false);
    }, 500);
  }, [category, language]);

  const handleFavoriteToggle = (id: string) => {
    setFavorites((prev) =>
      prev.includes(id) ? prev.filter((fav) => fav !== id) : [...prev, id]
    );
  };

  const handleCardClick = (id: string) => {
    navigate(`/attraction/${id}`);
  };

  if (loading) {
    return (
      <div className="h-full bg-background flex items-center justify-center">
        <LoadingSpinner />
      </div>
    );
  }

  // Get category display info
  const firstAttraction = attractions[0];
  const categoryInfo = firstAttraction
    ? getCategoryInfo(firstAttraction.category)
    : { emoji: "üìç", th: category || "", en: category || "" };

  const displayName =
    language === "th" ? categoryInfo.th : categoryInfo.en;

  return (
    <div className="h-full bg-background">
      {/* Header */}
      <div className="border-b border-border/30 bg-card/50 backdrop-blur-sm mb-6">
        <div className="p-4">
          <div className="flex items-center gap-3">
            <span className="text-2xl">{categoryInfo.emoji}</span>
            <div>
              <h2 className="text-xl font-semibold">{displayName}</h2>
              <p className="text-sm text-muted-foreground">
                {attractions.length}{" "}
                {language === "th" ? "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà" : "places"}
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="px-4">
        {attractions.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {attractions.map((attraction) => (
              <AttractionCard
                key={attraction.id}
                {...attraction}
                isFavorite={favorites.includes(attraction.id)}
                onFavoriteToggle={handleFavoriteToggle}
                onCardClick={handleCardClick}
              />
            ))}
          </div>
        ) : (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-xl font-semibold mb-2">
              {language === "th"
                ? "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏µ‡πâ"
                : "No places found in this category"}
            </h3>
            <p className="text-muted-foreground">
              {language === "th"
                ? "‡∏•‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"
                : "Try selecting another category or go back to the home page"}
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default CategoryView;